{"clipboardHistory":[{"value":"cat ~/.ssh/id_ed25519.pub\n","recorded":"2025-05-18 23:09:33.498994612","filePath":"null","pinned":false},{"value":"eval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_ed25519\n","recorded":"2025-05-18 23:09:22.088363188","filePath":"null","pinned":false},{"value":"ssh-keygen -t ed25519 -C \"your_email@example.com\"\n","recorded":"2025-05-18 23:08:36.932578816","filePath":"null","pinned":false},{"value":"https://github.com/guisaliba/dotfiles","recorded":"2025-05-18 21:46:23.950939107","filePath":"null","pinned":false},{"value":"    background #00000000  # 8-digit hex with last two zeroes = 0 opacity (alpha)","recorded":"2025-05-18 20:22:03.409939011","filePath":"null","pinned":false},{"value":"xprop | grep WM_CLASS\n","recorded":"2025-05-18 19:01:20.876130862","filePath":"null","pinned":false},{"value":"# transitions\n# # requires https://github.com/jonaburg/picom\n# (These are also the default values)\n\ntransition-length = 300\ntransition-pow-x = 0.3\ntransition-pow-y = 0.3\ntransition-pow-w = 0.3\ntransition-pow-h = 0.3\nsize-transition = true\n\n#################################\n#             Shadows           #\n#################################\n\n\n# Enabled client-side shadows on windows. Note desktop windows\n# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,\n# unless explicitly requested using the wintypes option.\n#\n# shadow = false\nshadow = true;\n\n# The blur radius for shadows, in pixels. (defaults to 12)\nshadow-radius = 12;\n\n# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)\n# shadow-opacity = .75\n\n# The left offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-x = -15\nshadow-offset-x = -7;\n\n# The top offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-y = -15\nshadow-offset-y = -7;\n\n# Red color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-red = 0\n\n# Green color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-green = 0\n\n# Blue color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-blue = 0\n\n# Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)\n# shadow-color = \"#000000\"\n\n# Specify a list of conditions of windows that should have no shadow.\n# shadow-exclude = []\nshadow-exclude = [\n  \"class_g = 'flameshot'\"\n];\n\n# Specify a list of conditions of windows that should have no shadow painted over, such as a dock window.\n# clip-shadow-above = []\n\n# Crop shadow of a window fully on a particular monitor to that monitor. This is\n# currently implemented using the X RandR extension.\n# crop-shadow-to-monitor = false\n\n\n#################################\n#           Fading              #\n#################################\n\n\n# Fade windows in/out when opening/closing and when opacity changes,\n#  unless no-fading-openclose is used.\n# fading = false\nfading = true;\n\n# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)\n# fade-in-step = 0.028\nfade-in-step = 0.05;\n\n# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)\n# fade-out-step = 0.03\nfade-out-step = 0.05;\n\n# The time between steps in fade step, in milliseconds. (\u003e 0, defaults to 10)\n# fade-delta = 10\n\n# Specify a list of conditions of windows that should not be faded.\nfade-exclude = [\"class_g = 'flameshot'\"]\n\n# Do not fade on window open/close.\n# no-fading-openclose = false\n\n# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.\n# no-fading-destroyed-argb = false\n\n\n#################################\n#   Transparency / Opacity      #\n#################################\n\n\n# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)\n# inactive-opacity = 1\ninactive-opacity = 1\n\n# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)\n# frame-opacity = 1.0\nframe-opacity = 0.6;\n\n# Let inactive opacity set by -i override the '_NET_WM_WINDOW_OPACITY' values of windows.\n# inactive-opacity-override = true\ninactive-opacity-override = false;\n\n# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)\n# active-opacity = 1.0\n\n# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)\ninactive-dim = 0.0\n\n# Specify a list of conditions of windows that should never be considered focused.\n# focus-exclude = []\n\n# Use fixed inactive dim value, instead of adjusting according to window opacity.\n# inactive-dim-fixed = 1.0\n\n# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,\n# like `50:name *= \"Firefox\"`. picom-trans is recommended over this.\n# Note we don't make any guarantee about possible conflicts with other\n# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.\n# example:\n#    opacity-rule = [ \"80:class_g = 'URxvt'\" ];\n\nopacity-rule = [\n    \"85:class_g = 'i3bar'\",\n    \"95:class_g = 'discord'\",\n    \"92:class_g = 'Rofi'\",\n\"100:class_g = 'flameshot'\"\n]\n\n\n#################################\n#           Corners             #\n#################################\n\n# Sets the radius of rounded window corners. When \u003e 0, the compositor will\n# round the corners of windows. Does not interact well with\n# `transparent-clipping`.\ncorner-radius = 4.0\nround-borders = 1;\n\n# Exclude conditions for rounded corners.\nrounded-corners-exclude = [ \n\"class_g = 'Rofi'\",\n\"class_g = 'flameshot'\"\n]\n\n\n#################################\n#     Background-Blurring       #\n#################################\n\nblur-background = true;\nblur-background-frame = true;\nblur-background-fixed = true;\n\nblur: {\n   method = \"dual_kawase\";\n   deviation = 1.0;\n   strength = 4;\n}\n\n\n# Parameters for background blurring, see the *BLUR* section for more information.\n# blur-method = gaussian\n# blur-size = 12\n#\n# blur-deviation = false\n#\n# blur-strength = 5\n\n# Blur background of semi-transparent / ARGB windows.\n# Bad in performance, with driver-dependent behavior.\n# The name of the switch may change without prior notifications.\n#\n# blur-background = false\n\n# Blur background of windows when the window frame is not opaque.\n# Implies:\n#    blur-background\n# Bad in performance, with driver-dependent behavior. The name may change.\n#\n# blur-background-frame = false\n\n\n# Use fixed blur strength rather than adjusting according to window opacity.\n# blur-background-fixed = false\n\n\n# Specify the blur convolution kernel, with the following format:\n# example:\n#   blur-kern = \"5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\";\n#\n# blur-kern = \"\"\n\n# Exclude conditions for background blur.\nblur-background-exclude = [\n\"class_g = 'flameshot'\"\n]\n\n#################################\n#       General Settings        #\n#################################\n\n# Enable remote control via D-Bus. See the man page for more details.\n# dbus = true\n\n# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.\n# daemon = false\n\n# Specify the backend to use: `xrender`, `glx`, `egl` or `xr_glx_hybrid`.\n# `xrender` is the default one.\n#\n# backend = \"glx\"\nbackend = \"glx\";\n\n# Use higher precision during rendering, and apply dither when presenting the\n# rendered screen. Reduces banding artifacts, but might cause performance\n# degradation. Only works with OpenGL.\ndithered-present = false;\n\n# Enable/disable VSync.\n# vsync = false\nvsync = true;\n\n# Try to detect WM windows (a non-override-redirect window with no\n# child that has 'WM_STATE') and mark them as active.\n#\n# mark-wmwin-focused = false\nmark-wmwin-focused = true;\n\n# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.\n# mark-ovredir-focused = false\nmark-ovredir-focused = true;\n\n# Try to detect windows with rounded corners and don't consider them\n# shaped windows. The accuracy is not very high, unfortunately.\n#\n# detect-rounded-corners = false\ndetect-rounded-corners = true;\n\n# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers\n# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.\n#\n# detect-client-opacity = false\ndetect-client-opacity = true;\n\n# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,\n# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy,\n# provided that the WM supports it.\n#\n# use-ewmh-active-win = false\n\n# Unredirect all windows if a full-screen opaque window is detected,\n# to maximize performance for full-screen windows. Known to cause flickering\n# when redirecting/unredirecting windows.\n#\n# unredir-if-possible = false\n\n# Delay before unredirecting the window, in milliseconds. Defaults to 0.\n# unredir-if-possible-delay = 0\n\n# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.\n# unredir-if-possible-exclude = []\n\n# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows\n# in the same group focused at the same time.\n#\n# detect-transient = false\ndetect-transient = true;\n\n# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same\n# group focused at the same time. This usually means windows from the same application\n# will be considered focused or unfocused at the same time.\n# 'WM_TRANSIENT_FOR' has higher priority if detect-transient is enabled, too.\n#\n# detect-client-leader = false\n\n# Resize damaged region by a specific number of pixels.\n# A positive value enlarges it while a negative one shrinks it.\n# If the value is positive, those additional pixels will not be actually painted\n# to screen, only used in blur calculation, and such. (Due to technical limitations,\n# with use-damage, those pixels will still be incorrectly painted to screen.)\n# Primarily used to fix the line corruption issues of blur,\n# in which case you should use the blur radius value here\n# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`,\n# with a 5x5 one you use `--resize-damage 2`, and so on).\n# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.\n#\n# resize-damage = 1\n\n# Specify a list of conditions of windows that should be painted with inverted color.\n# Resource-hogging, and is not well tested.\n#\n# invert-color-include = []\n\n# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.\n# Might cause incorrect opacity when rendering transparent content (but never\n# practically happened) and may not work with blur-background.\n# My tests show a 15% performance boost. Recommended.\n#\n# glx-no-stencil = false\n\n# GLX backend: Avoid rebinding pixmap on window damage.\n# Probably could improve performance on rapid window content changes,\n# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).\n# Recommended if it works.\n#\n# glx-no-rebind-pixmap = false\n\n# Disable the use of damage information.\n# This cause the whole screen to be redrawn every time, instead of the part of the screen\n# has actually changed. Potentially degrades the performance, but might fix some artifacts.\n# The opposing option is use-damage\n#\n# no-use-damage = false\n\n# Use X Sync fence to sync clients' draw calls, to make sure all draw\n# calls are finished before picom starts drawing. Needed on nvidia-drivers\n# with GLX backend for some users.\n\n# GLX backend: Use specified GLSL fragment shader for rendering window\n# contents. Read the man page for a detailed explanation of the interface.\n#\n# window-shader-fg = \"default\"\n\n# Use rules to set per-window shaders. Syntax is SHADER_PATH:PATTERN, similar\n# to opacity-rule. SHADER_PATH can be \"default\". This overrides window-shader-fg.\n#\n# window-shader-fg-rule = [\n#   \"my_shader.frag:window_type != 'dock'\"\n# ]\n\n# Force all windows to be painted with blending. Useful if you\n# have a glx-fshader-win that could turn opaque pixels transparent.\n#\n# force-win-blend = false\n\n# Do not use EWMH to detect fullscreen windows.\n# Reverts to checking if a window is fullscreen based only on its size and coordinates.\n#\n# no-ewmh-fullscreen = false\n\n# Dimming bright windows so their brightness doesn't exceed this set value.\n# Brightness of a window is estimated by averaging all pixels in the window,\n# so this could comes with a performance hit.\n# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)\n#\n# max-brightness = 1.0\n\n# Make transparent windows clip other windows like non-transparent windows do,\n# instead of blending on top of them.\n#\n# transparent-clipping = false\n\n# Specify a list of conditions of windows that should never have transparent\n# clipping applied. Useful for screenshot tools, where you need to be able to\n# see through transparent parts of the window.\n#\ntransparent-clipping-exclude = [\n\"class_g = 'flameshot'\"\n]\n\n# Set the log level. Possible values are:\n#  \"trace\", \"debug\", \"info\", \"warn\", \"error\"\n# in increasing level of importance. Case doesn't matter.\n# If using the \"TRACE\" log level, it's better to log into a file\n# using *--log-file*, since it can generate a huge stream of logs.\n#\n# log-level = \"debug\"\nlog-level = \"warn\";\n\n# Set the log file.\n# If *--log-file* is never specified, logs will be written to stderr.\n# Otherwise, logs will to written to the given file, though some of the early\n# logs might still be written to the stderr.\n# When setting this option from the config file, it is recommended to use an absolute path.\n#\n# log-file = \"/path/to/your/log/file\"\n\n# Show all X errors (for debugging)\n# show-all-xerrors = false\n\n# Write process ID to a file.\n# write-pid-path = \"/path/to/your/log/file\"\n\n# Window type settings\n#\n# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:\n#     \"unknown\", \"desktop\", \"dock\", \"toolbar\", \"menu\", \"utility\",\n#     \"splash\", \"dialog\", \"normal\", \"dropdown_menu\", \"popup_menu\",\n#     \"tooltip\", \"notification\", \"combo\", and \"dnd\".\n#\n# Following per window-type options are available: ::\n#\n#   fade, shadow:::\n#     Controls window-type-specific shadow and fade settings.\n#\n#   opacity:::\n#     Controls default opacity of the window type.\n#\n#   focus:::\n#     Controls whether the window of this type is to be always considered focused.\n#     (By default, all window types except \"normal\" and \"dialog\" has this on.)\n#\n#   full-shadow:::\n#     Controls whether shadow is drawn under the parts of the window that you\n#     normally won't be able to see. Useful when the window has parts of it\n#     transparent, and you want shadows in those areas.\n#\n#   clip-shadow-above:::\n#     Controls whether shadows that would have been drawn above the window should\n#     be clipped. Useful for dock windows that should have no shadow painted on top.\n#\n#   redir-ignore:::\n#     Controls whether this type of windows should cause screen to become\n#     redirected again after been unredirected. If you have unredir-if-possible\n#     set, and doesn't want certain window to cause unnecessary screen redirection,\n#     you can set this to `true`.\n#\nwintypes:\n{\n  dock = { shadow = false; clip-shadow-above = false; }\n  dnd = { shadow = false; }\n  popup_menu = { opacity = 1; }\n  dropdown_menu = { opacity = 1; }\n};\n\n#################################\n#     Animation Settings    #\n#################################\n\nanimations = (\n  {\n    triggers = [\"close\", \"hide\"];\n    opacity = {\n      curve = \"linear\";\n      duration = 0.1;\n      start = \"window-raw-opacity-before\";\n      end = 0;\n    };\n    blur-opacity = \"opacity\";\n    shadow-opacity = \"opacity\";\n  },\n  {\n    triggers = [\"open\", \"show\"];\n    opacity = {\n      curve = \"cubic-bezier(0,1,1,1)\";\n      duration = 0.3;\n      start = 0;\n      end = \"window-raw-opacity\";\n    };\n    blur-opacity = \"opacity\";\n    shadow-opacity = \"opacity\";\n    offset-x = \"(1 - scale-x) / 2 * window-width\";\n    offset-y = \"(1 - scale-y) / 2 * window-height\";\n    scale-x = {\n      curve = \"cubic-bezier(0,1.3,1,1)\";\n      duration = 0.3;\n      start = 0.6;\n      end = 1;\n    };\n    scale-y = \"scale-x\";\n    shadow-scale-x = \"scale-x\";\n    shadow-scale-y = \"scale-y\";\n    shadow-offset-x = \"offset-x\";\n    shadow-offset-y = \"offset-y\";\n  },\n  {\n    triggers = [\"geometry\"]\n    scale-x = {\n      curve = \"cubic-bezier(0,0,0,1.28)\";\n      duration = 0.22;\n      start = \"window-width-before / window-width\";\n      end = 1;\n    }\n    scale-y = {\n      curve = \"cubic-bezier(0,0,0,1.28)\";\n      duration = 0.22;\n      start = \"window-height-before / window-height\";\n      end = 1;\n    }\n    offset-x = {\n      curve = \"cubic-bezier(0,0,0,1.28)\";\n      duration = 0.22;\n      start = \"window-x-before - window-x\";\n      end = 0;\n    }\n    offset-y = {\n      curve = \"cubic-bezier(0,0,0,1.28)\";\n      duration = 0.22;\n      start = \"window-y-before - window-y\";\n      end = 0;\n    }\n\n    shadow-scale-x = \"scale-x\";\n    shadow-scale-y = \"scale-y\";\n    shadow-offset-x = \"offset-x\";\n    shadow-offset-y = \"offset-y\";\n  }\n)\n","recorded":"2025-05-18 19:00:26.300248137","filePath":"null","pinned":false},{"value":"# Disable annoying bell sound\nenable_audio_bell no\n\n# Font configuration\nfont_family JetBrains Mono\nbold_font JetBrains Mono Bold\nitalic_font JetBrains Mono Italic\nbold_italic_font JetBrains Mono Bold Italic\nfont_size 12\nenable_ligatures always\n\n# Transparency\nbackground_opacity 0.83\n\n# Confirm on closing windows\nconfirm_os_window_close 0 \n\n# Session management\nstartup_session ~/.config/kitty/kittysession.conf\n\n# BEGIN_KITTY_THEME\n# Catppuccin-Mocha\ninclude current-theme.conf\n# END_KITTY_THEME\n\n# vim:ft=kitty\n\n","recorded":"2025-05-18 18:58:09.829037389","filePath":"null","pinned":false},{"value":"\"$schema\" = 'https://starship.rs/config-schema.json'\n\nformat = \"\"\"\n[](color_orange)\\\n$os\\\n$username\\\n[](bg:color_yellow fg:color_orange)\\\n$directory\\\n[](fg:color_yellow bg:color_aqua)\\\n$git_branch\\\n$git_status\\\n[](fg:color_aqua bg:color_blue)\\\n$c\\\n$cpp\\\n$rust\\\n$golang\\\n$nodejs\\\n$php\\\n$java\\\n$kotlin\\\n$haskell\\\n$python\\\n[](fg:color_blue bg:color_bg3)\\\n$docker_context\\\n$conda\\\n$pixi\\\n[](fg:color_bg3 bg:color_bg1)\\\n$time\\\n[ ](fg:color_bg1)\\\n$line_break$character\"\"\"\n\npalette = 'gruvbox_dark'\n\n[palettes.gruvbox_dark]\ncolor_fg0 = '#fbf1c7'\ncolor_bg1 = '#3c3836'\ncolor_bg3 = '#665c54'\ncolor_blue = '#458588'\ncolor_aqua = '#689d6a'\ncolor_green = '#98971a'\ncolor_orange = '#d65d0e'\ncolor_purple = '#b16286'\ncolor_red = '#cc241d'\ncolor_yellow = '#d79921'\n\n[os]\ndisabled = false\nstyle = \"bg:color_orange fg:color_fg0\"\n\n[os.symbols]\nWindows = \"󰍲\"\nUbuntu = \"󰕈\"\nSUSE = \"\"\nRaspbian = \"󰐿\"\nMint = \"󰣭\"\nMacos = \"󰀵\"\nManjaro = \"\"\nLinux = \"󰌽\"\nGentoo = \"󰣨\"\nFedora = \"󰣛\"\nAlpine = \"\"\nAmazon = \"\"\nAndroid = \"\"\nArch = \"󰣇\"\nArtix = \"󰣇\"\nEndeavourOS = \"\"\nCentOS = \"\"\nDebian = \"󰣚\"\nRedhat = \"󱄛\"\nRedHatEnterprise = \"󱄛\"\nPop = \"\"\n\n[username]\nshow_always = true\nstyle_user = \"bg:color_orange fg:color_fg0\"\nstyle_root = \"bg:color_orange fg:color_fg0\"\nformat = '[ $user ]($style)'\n\n[directory]\nstyle = \"fg:color_fg0 bg:color_yellow\"\nformat = \"[ $path ]($style)\"\ntruncation_length = 3\ntruncation_symbol = \"…/\"\n\n[directory.substitutions]\n\"Documents\" = \"󰈙 \"\n\"Downloads\" = \" \"\n\"Music\" = \"󰝚 \"\n\"Pictures\" = \" \"\n\"Developer\" = \"󰲋 \"\n\n[git_branch]\nsymbol = \"\"\nstyle = \"bg:color_aqua\"\nformat = '[[ $symbol $branch ](fg:color_fg0 bg:color_aqua)]($style)'\n\n[git_status]\nstyle = \"bg:color_aqua\"\nformat = '[[($all_status$ahead_behind )](fg:color_fg0 bg:color_aqua)]($style)'\n\n[nodejs]\nsymbol = \"\"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[c]\nsymbol = \" \"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[cpp]\nsymbol = \" \"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[rust]\nsymbol = \"\"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[golang]\nsymbol = \"\"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[php]\nsymbol = \"\"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[java]\nsymbol = \"\"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[kotlin]\nsymbol = \"\"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[haskell]\nsymbol = \"\"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[python]\nsymbol = \"\"\nstyle = \"bg:color_blue\"\nformat = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'\n\n[docker_context]\nsymbol = \"\"\nstyle = \"bg:color_bg3\"\nformat = '[[ $symbol( $context) ](fg:#83a598 bg:color_bg3)]($style)'\n\n[conda]\nstyle = \"bg:color_bg3\"\nformat = '[[ $symbol( $environment) ](fg:#83a598 bg:color_bg3)]($style)'\n\n[pixi]\nstyle = \"bg:color_bg3\"\nformat = '[[ $symbol( $version)( $environment) ](fg:color_fg0 bg:color_bg3)]($style)'\n\n[time]\ndisabled = false\ntime_format = \"%R\"\nstyle = \"bg:color_bg1\"\nformat = '[[  $time ](fg:color_fg0 bg:color_bg1)]($style)'\n\n[line_break]\ndisabled = false\n\n[character]\ndisabled = false\nsuccess_symbol = '[](bold fg:color_green)'\nerror_symbol = '[](bold fg:color_red)'\nvimcmd_symbol = '[](bold fg:color_green)'\nvimcmd_replace_one_symbol = '[](bold fg:color_purple)'\nvimcmd_replace_symbol = '[](bold fg:color_purple)'\nvimcmd_visual_symbol = '[](bold fg:color_yellow)'","recorded":"2025-05-18 18:52:45.649908792","filePath":"null","pinned":false},{"value":"success_symbol = '[➜](bold green)' # The 'success_symbol' segment is being set to '➜' with the color 'bold green'\n","recorded":"2025-05-18 18:50:56.874544400","filePath":"null","pinned":false},{"value":"# version: 1.0.0\n\nadd_newline = true\ncontinuation_prompt = \"[▸▹ ](dimmed white)\"\n\nformat = \"\"\"($nix_shell$container$fill$git_metrics\\n)$cmd_duration\\\n$hostname\\\n$localip\\\n$shlvl\\\n$shell\\\n$env_var\\\n$jobs\\\n$sudo\\\n$username\\\n$character\"\"\"\n\nright_format = \"\"\"\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cpp\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$conda\\\n$pixi\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$crystal\\\n$custom\\\n$status\\\n$os\\\n$battery\\\n$time\"\"\"\n\n[fill]\nsymbol = ' '\n\n[character]\nformat = \"$symbol \"\nsuccess_symbol = \"[◎](bold italic bright-yellow)\"\nerror_symbol = \"[○](italic purple)\"\nvimcmd_symbol = \"[■](italic dimmed green)\"\n# not supported in zsh\nvimcmd_replace_one_symbol = \"◌\"\nvimcmd_replace_symbol = \"□\"\nvimcmd_visual_symbol = \"▼\"\n\n[env_var.VIMSHELL]\nformat = \"[$env_value]($style)\"\nstyle = 'green italic'\n\n[sudo]\nformat = \"[$symbol]($style)\"\nstyle = \"bold italic bright-purple\"\nsymbol = \"⋈┈\"\ndisabled = false\n\n[username]\nstyle_user = \"bright-yellow bold italic\"\nstyle_root = \"purple bold italic\"\nformat = \"[⭘ $user]($style) \"\ndisabled = false\nshow_always = false\n\n[directory]\nhome_symbol = \"⌂\"\ntruncation_length = 2\ntruncation_symbol = \"□ \"\nread_only = \" ◈\"\nuse_os_path_sep = true\nstyle = \"italic blue\"\nformat = '[$path]($style)[$read_only]($read_only_style)'\nrepo_root_style = 'bold blue'\nrepo_root_format = '[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) [△](bold bright-blue)'\n\n[cmd_duration]\nformat = \"[◄ $duration ](italic white)\"\n\n[jobs]\nformat = \"[$symbol$number]($style) \"\nstyle = \"white\"\nsymbol = \"[▶](blue italic)\"\n\n[localip]\nssh_only = true\nformat = \" ◯[$localipv4](bold magenta)\"\ndisabled = false\n\n[time]\ndisabled = false\nformat = \"[ $time]($style)\"\ntime_format = \"%R\"\nutc_time_offset = \"local\"\nstyle = \"italic dimmed white\"\n\n[battery]\nformat = \"[ $percentage $symbol]($style)\"\nfull_symbol = \"█\"\ncharging_symbol = \"[↑](italic bold green)\"\ndischarging_symbol = \"↓\"\nunknown_symbol = \"░\"\nempty_symbol = \"▃\"\n\n[[battery.display]]\nthreshold = 20\nstyle = \"italic bold red\"\n\n[[battery.display]]\nthreshold = 60\nstyle = \"italic dimmed bright-purple\"\n\n[[battery.display]]\nthreshold = 70\nstyle = \"italic dimmed yellow\"\n\n[git_branch]\nformat = \" [$branch(:$remote_branch)]($style)\"\nsymbol = \"[△](bold italic bright-blue)\"\nstyle = \"italic bright-blue\"\ntruncation_symbol = \"⋯\"\ntruncation_length = 11\nignore_branches = [\"main\", \"master\"]\nonly_attached = true\n\n[git_metrics]\nformat = '([▴$added]($added_style))([▿$deleted]($deleted_style))'\nadded_style = 'italic dimmed green'\ndeleted_style = 'italic dimmed red'\nignore_submodules = true\ndisabled = false\n\n[git_status]\nstyle = \"bold italic bright-blue\"\nformat = \"([⎪$ahead_behind$staged$modified$untracked$renamed$deleted$conflicted$stashed⎥]($style))\"\nconflicted = \"[◪◦](italic bright-magenta)\"\nahead = \"[▴│[${count}](bold white)│](italic green)\"\nbehind = \"[▿│[${count}](bold white)│](italic red)\"\ndiverged = \"[◇ ▴┤[${ahead_count}](regular white)│▿┤[${behind_count}](regular white)│](italic bright-magenta)\"\nuntracked = \"[◌◦](italic bright-yellow)\"\nstashed = \"[◃◈](italic white)\"\nmodified = \"[●◦](italic yellow)\"\nstaged = \"[▪┤[$count](bold white)│](italic bright-cyan)\"\nrenamed = \"[◎◦](italic bright-blue)\"\ndeleted = \"[✕](italic red)\"\n\n[deno]\nformat = \" [deno](italic) [∫ $version](green bold)\"\nversion_format = \"${raw}\"\n\n[lua]\nformat = \" [lua](italic) [${symbol}${version}]($style)\"\nversion_format = \"${raw}\"\nsymbol = \"⨀ \"\nstyle = \"bold bright-yellow\"\n\n[nodejs]\nformat = \" [node](italic) [◫ ($version)](bold bright-green)\"\nversion_format = \"${raw}\"\ndetect_files = [\"package-lock.json\", \"yarn.lock\"]\ndetect_folders = [\"node_modules\"]\ndetect_extensions = []\n\n[python]\nformat = \" [py](italic) [${symbol}${version}]($style)\"\nsymbol = \"[⌉](bold bright-blue)⌊ \"\nversion_format = \"${raw}\"\nstyle = \"bold bright-yellow\"\n\n[ruby]\nformat = \" [rb](italic) [${symbol}${version}]($style)\"\nsymbol = \"◆ \"\nversion_format = \"${raw}\"\nstyle = \"bold red\"\n\n[rust]\nformat = \" [rs](italic) [$symbol$version]($style)\"\nsymbol = \"⊃ \"\nversion_format = \"${raw}\"\nstyle = \"bold red\"\n\n[package]\nformat = \" [pkg](italic dimmed) [$symbol$version]($style)\"\nversion_format = \"${raw}\"\nsymbol = \"◨ \"\nstyle = \"dimmed yellow italic bold\"\n\n[swift]\nformat = \" [sw](italic) [${symbol}${version}]($style)\"\nsymbol = \"◁ \"\nstyle = \"bold bright-red\"\nversion_format = \"${raw}\"\n\n[aws]\ndisabled = true\nformat = \" [aws](italic) [$symbol $profile $region]($style)\"\nstyle = \"bold blue\"\nsymbol = \"▲ \"\n\n[buf]\nsymbol = \"■ \"\nformat = \" [buf](italic) [$symbol $version $buf_version]($style)\"\n\n[c]\nsymbol = \"ℂ \"\nformat = \" [$symbol($version(-$name))]($style)\"\n\n[cpp]\nsymbol = \"ℂ \"\nformat = \" [$symbol($version(-$name))]($style)\"\n\n[conda]\nsymbol = \"◯ \"\nformat = \" conda [$symbol$environment]($style)\"\n\n[pixi]\nsymbol = \"■ \"\nformat = \" pixi [$symbol$version ($environment )]($style)\"\n\n[dart]\nsymbol = \"◁◅ \"\nformat = \" dart [$symbol($version )]($style)\"\n\n[docker_context]\nsymbol = \"◧ \"\nformat = \" docker [$symbol$context]($style)\"\n\n[elixir]\nsymbol = \"△ \"\nformat = \" exs [$symbol $version OTP $otp_version ]($style)\"\n\n[elm]\nsymbol = \"◩ \"\nformat = \" elm [$symbol($version )]($style)\"\n\n[golang]\nsymbol = \"∩ \"\nformat = \" go [$symbol($version )]($style)\"\n\n[haskell]\nsymbol = \"❯λ \"\nformat = \" hs [$symbol($version )]($style)\"\n\n[java]\nsymbol = \"∪ \"\nformat = \" java [${symbol}(${version} )]($style)\"\n\n[julia]\nsymbol = \"◎ \"\nformat = \" jl [$symbol($version )]($style)\"\n\n[memory_usage]\nsymbol = \"▪▫▪ \"\nformat = \" mem [${ram}( ${swap})]($style)\"\n\n[nim]\nsymbol = \"▴▲▴ \"\nformat = \" nim [$symbol($version )]($style)\"\n\n[nix_shell]\nstyle = 'bold italic dimmed blue'\nsymbol = '✶'\nformat = '[$symbol nix⎪$state⎪]($style) [$name](italic dimmed white)'\nimpure_msg = '[⌽](bold dimmed red)'\npure_msg = '[⌾](bold dimmed green)'\nunknown_msg = '[◌](bold dimmed ellow)'\n\n[spack]\nsymbol = \"◇ \"\nformat = \" spack [$symbol$environment]($style)\"","recorded":"2025-05-18 18:49:35.669410412","filePath":"null","pinned":false},{"value":"\nSkip to content\nStarship\nMain Navigation\nConfiguration\n\nSidebar Navigation\n\nGuide\n\nInstallation\n\nConfiguration\n\nAdvanced Configuration\n\nFAQ\n\nPresets\n\nReturn to Presets\nJetpack Preset\n\nThis is a pseudo minimalist preset inspired by the geometry and spaceship prompts.\n\n    Jetpack uses the terminal's color theme.\n\nScreenshot of Jetpack preset\nPrerequisite\n\n    Requires a shell with right-prompt support.\n    Jetbrains Mono is recommended.\n\nConfiguration\n\nstarship preset jetpack -o ~/.config/starship.toml\n\nClick to download TOML\n\n# version: 1.0.0\n\nadd_newline = true\ncontinuation_prompt = \"[▸▹ ](dimmed white)\"\n\nformat = \"\"\"($nix_shell$container$fill$git_metrics\\n)$cmd_duration\\\n$hostname\\\n$localip\\\n$shlvl\\\n$shell\\\n$env_var\\\n$jobs\\\n$sudo\\\n$username\\\n$character\"\"\"\n\nright_format = \"\"\"\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cpp\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$conda\\\n$pixi\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$crystal\\\n$custom\\\n$status\\\n$os\\\n$battery\\\n$time\"\"\"\n\n[fill]\nsymbol = ' '\n\n[character]\nformat = \"$symbol \"\nsuccess_symbol = \"[◎](bold italic bright-yellow)\"\nerror_symbol = \"[○](italic purple)\"\nvimcmd_symbol = \"[■](italic dimmed green)\"\n# not supported in zsh\nvimcmd_replace_one_symbol = \"◌\"\nvimcmd_replace_symbol = \"□\"\nvimcmd_visual_symbol = \"▼\"\n\n[env_var.VIMSHELL]\nformat = \"[$env_value]($style)\"\nstyle = 'green italic'\n\n[sudo]\nformat = \"[$symbol]($style)\"\nstyle = \"bold italic bright-purple\"\nsymbol = \"⋈┈\"\ndisabled = false\n\n[username]\nstyle_user = \"bright-yellow bold italic\"\nstyle_root = \"purple bold italic\"\nformat = \"[⭘ $user]($style) \"\ndisabled = false\nshow_always = false\n\n[directory]\nhome_symbol = \"⌂\"\ntruncation_length = 2\ntruncation_symbol = \"□ \"\nread_only = \" ◈\"\nuse_os_path_sep = true\nstyle = \"italic blue\"\nformat = '[$path]($style)[$read_only]($read_only_style)'\nrepo_root_style = 'bold blue'\nrepo_root_format = '[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) [△](bold bright-blue)'\n\n[cmd_duration]\nformat = \"[◄ $duration ](italic white)\"\n\n[jobs]\nformat = \"[$symbol$number]($style) \"\nstyle = \"white\"\nsymbol = \"[▶](blue italic)\"\n\n[localip]\nssh_only = true\nformat = \" ◯[$localipv4](bold magenta)\"\ndisabled = false\n\n[time]\ndisabled = false\nformat = \"[ $time]($style)\"\ntime_format = \"%R\"\nutc_time_offset = \"local\"\nstyle = \"italic dimmed white\"\n\n[battery]\nformat = \"[ $percentage $symbol]($style)\"\nfull_symbol = \"█\"\ncharging_symbol = \"[↑](italic bold green)\"\ndischarging_symbol = \"↓\"\nunknown_symbol = \"░\"\nempty_symbol = \"▃\"\n\n[[battery.display]]\nthreshold = 20\nstyle = \"italic bold red\"\n\n[[battery.display]]\nthreshold = 60\nstyle = \"italic dimmed bright-purple\"\n\n[[battery.display]]\nthreshold = 70\nstyle = \"italic dimmed yellow\"\n\n[git_branch]\nformat = \" [$branch(:$remote_branch)]($style)\"\nsymbol = \"[△](bold italic bright-blue)\"\nstyle = \"italic bright-blue\"\ntruncation_symbol = \"⋯\"\ntruncation_length = 11\nignore_branches = [\"main\", \"master\"]\nonly_attached = true\n\n[git_metrics]\nformat = '([▴$added]($added_style))([▿$deleted]($deleted_style))'\nadded_style = 'italic dimmed green'\ndeleted_style = 'italic dimmed red'\nignore_submodules = true\ndisabled = false\n\n[git_status]\nstyle = \"bold italic bright-blue\"\nformat = \"([⎪$ahead_behind$staged$modified$untracked$renamed$deleted$conflicted$stashed⎥]($style))\"\nconflicted = \"[◪◦](italic bright-magenta)\"\nahead = \"[▴│[${count}](bold white)│](italic green)\"\nbehind = \"[▿│[${count}](bold white)│](italic red)\"\ndiverged = \"[◇ ▴┤[${ahead_count}](regular white)│▿┤[${behind_count}](regular white)│](italic bright-magenta)\"\nuntracked = \"[◌◦](italic bright-yellow)\"\nstashed = \"[◃◈](italic white)\"\nmodified = \"[●◦](italic yellow)\"\nstaged = \"[▪┤[$count](bold white)│](italic bright-cyan)\"\nrenamed = \"[◎◦](italic bright-blue)\"\ndeleted = \"[✕](italic red)\"\n\n[deno]\nformat = \" [deno](italic) [∫ $version](green bold)\"\nversion_format = \"${raw}\"\n\n[lua]\nformat = \" [lua](italic) [${symbol}${version}]($style)\"\nversion_format = \"${raw}\"\nsymbol = \"⨀ \"\nstyle = \"bold bright-yellow\"\n\n[nodejs]\nformat = \" [node](italic) [◫ ($version)](bold bright-green)\"\nversion_format = \"${raw}\"\ndetect_files = [\"package-lock.json\", \"yarn.lock\"]\ndetect_folders = [\"node_modules\"]\ndetect_extensions = []\n\n[python]\nformat = \" [py](italic) [${symbol}${version}]($style)\"\nsymbol = \"[⌉](bold bright-blue)⌊ \"\nversion_format = \"${raw}\"\nstyle = \"bold bright-yellow\"\n\n[ruby]\nformat = \" [rb](italic) [${symbol}${version}]($style)\"\nsymbol = \"◆ \"\nversion_format = \"${raw}\"\nstyle = \"bold red\"\n\n[rust]\nformat = \" [rs](italic) [$symbol$version]($style)\"\nsymbol = \"⊃ \"\nversion_format = \"${raw}\"\nstyle = \"bold red\"\n\n[package]\nformat = \" [pkg](italic dimmed) [$symbol$version]($style)\"\nversion_format = \"${raw}\"\nsymbol = \"◨ \"\nstyle = \"dimmed yellow italic bold\"\n\n[swift]\nformat = \" [sw](italic) [${symbol}${version}]($style)\"\nsymbol = \"◁ \"\nstyle = \"bold bright-red\"\nversion_format = \"${raw}\"\n\n[aws]\ndisabled = true\nformat = \" [aws](italic) [$symbol $profile $region]($style)\"\nstyle = \"bold blue\"\nsymbol = \"▲ \"\n\n[buf]\nsymbol = \"■ \"\nformat = \" [buf](italic) [$symbol $version $buf_version]($style)\"\n\n[c]\nsymbol = \"ℂ \"\nformat = \" [$symbol($version(-$name))]($style)\"\n\n[cpp]\nsymbol = \"ℂ \"\nformat = \" [$symbol($version(-$name))]($style)\"\n\n[conda]\nsymbol = \"◯ \"\nformat = \" conda [$symbol$environment]($style)\"\n\n[pixi]\nsymbol = \"■ \"\nformat = \" pixi [$symbol$version ($environment )]($style)\"\n\n[dart]\nsymbol = \"◁◅ \"\nformat = \" dart [$symbol($version )]($style)\"\n\n[docker_context]\nsymbol = \"◧ \"\nformat = \" docker [$symbol$context]($style)\"\n\n[elixir]\nsymbol = \"△ \"\nformat = \" exs [$symbol $version OTP $otp_version ]($style)\"\n\n[elm]\nsymbol = \"◩ \"\nformat = \" elm [$symbol($version )]($style)\"\n\n[golang]\nsymbol = \"∩ \"\nformat = \" go [$symbol($version )]($style)\"\n\n[haskell]\nsymbol = \"❯λ \"\nformat = \" hs [$symbol($version )]($style)\"\n\n[java]\nsymbol = \"∪ \"\nformat = \" java [${symbol}(${version} )]($style)\"\n\n[julia]\nsymbol = \"◎ \"\nformat = \" jl [$symbol($version )]($style)\"\n\n[memory_usage]\nsymbol = \"▪▫▪ \"\nformat = \" mem [${ram}( ${swap})]($style)\"\n\n[nim]\nsymbol = \"▴▲▴ \"\nformat = \" nim [$symbol($version )]($style)\"\n\n[nix_shell]\nstyle = 'bold italic dimmed blue'\nsymbol = '✶'\nformat = '[$symbol nix⎪$state⎪]($style) [$name](italic dimmed white)'\nimpure_msg = '[⌽](bold dimmed red)'\npure_msg = '[⌾](bold dimmed green)'\nunknown_msg = '[◌](bold dimmed ellow)'\n\n[spack]\nsymbol = \"◇ \"\nformat = \" spack [$symbol$environment]($style)\"\n\nEdit this page on GitHub\nPager\nNext pageGuide\n","recorded":"2025-05-18 18:48:48.491667339","filePath":"null","pinned":false},{"value":"success_symbol = '[➜](bold green)' # The 'success_symbol' segment is being set to '➜' with the color 'bold green'","recorded":"2025-05-18 18:45:55.684024814","filePath":"null","pinned":false},{"value":"format = \"$directory $character$username $fill $time\\n [󱞪](fg:iris) \"\npalette = \"rose-pine-moon\"\nadd_newline = false\n\n[palettes.rose-pine-moon]\noverlay = '#393552'\nlove = '#eb6f92'\ngold = '#f6c177'\nrose = '#ea9a97'\npine = '#3e8fb0'\nfoam = '#9ccfd8'\niris = '#c4a7e7'\n\n[directory]\nformat = \"(fg:overlay)[$path]($style)(fg:overlay)\"\nstyle = \"fg:foam\"\ntruncation_length = 3\ntruncation_symbol = \"\"\n\n[character]\nsuccess_symbol = \"[❯](love)[❯](gold)[❯](rose)\"\n\n[directory.substitutions]\nDocuments = \"󰈙\"\nDownloads = \" \"\nMusic = \" \"\nPictures = \" \"\n\n[fill]\nstyle = \"fg:overlay\"\nsymbol = \" \"\n\n[git_branch]\nformat = \"(fg:overlay)[$symbol $branch ]($style)(fg:overlay)\"\nstyle = \"fg:foam\"\nsymbol = \"\"\n\n[time]\ndisabled = false\nformat = \"(fg:overlay)[ $time 󰴈 ]($style)(fg:overlay)\"\nstyle = \"fg:rose\"\ntime_format = \"%H:%M\"\nuse_12hr = false\n\n[username]\ndisabled = false\nformat = \"(fg:overlay)[󰧱 $user]($style)(fg:overlay)\"\nshow_always = true\nstyle_root = \"fg:iris\"\nstyle_user = \"fg:iris\"\n","recorded":"2025-05-18 17:56:38.110725548","filePath":"null","pinned":false},{"value":"# Basic ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'","recorded":"2025-05-18 17:51:45.690811317","filePath":"null","pinned":false},{"value":"# Alternative if CLI doesn't work: alias notes='obsidian ~/projects/brain'","recorded":"2025-05-18 17:47:39.039687943","filePath":"null","pinned":false},{"value":"# Remove all Docker containers\nalias drma='docker rm -fv $(docker ps -qa)'","recorded":"2025-05-18 17:47:16.082942016","filePath":"null","pinned":false},{"value":"# Custom aliases\n\nalias py='python3'\nalias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'\nalias encode=\"$HOME/.config/scripts/encode.sh\"\n\n# Obsidian alias: make sure it's installed and runnable\nalias notes='cd ~/projects/brain \u0026\u0026 obsidian'\n\n# Some handy ls variations\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\n\n# Alert for long-running commands\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] \u0026\u0026 echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;\u0026|]\\s*alert$//'\\'')\"'\n","recorded":"2025-05-18 17:43:06.092330879","filePath":"null","pinned":false},{"value":"# ~/.bashrc: executed by bash(1) for non-login shells.\n\n# Exit if not running interactively\ncase $- in\n    *i*) ;;\n      *) return;;\nesac\n\n# History behavior\nHISTCONTROL=ignoreboth  # ignore duplicates and lines starting with space\nshopt -s histappend     # append to history file instead of overwriting\nHISTSIZE=1000\nHISTFILESIZE=2000\n\n# Adjust LINES and COLUMNS after resizing terminal window\nshopt -s checkwinsize\n\n# Lesspipe for friendlier viewing of non-text files\n[ -x /usr/bin/lesspipe ] \u0026\u0026 eval \"$(SHELL=/bin/sh lesspipe)\"\n\n# Enable color prompt if terminal supports it\nif [ -x /usr/bin/tput ] \u0026\u0026 tput setaf 1 \u0026\u003e/dev/null; then\n    PS1='\\[\\033[01;34m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;35m\\]\\w\\[\\033[00m\\]\\$ '\nelse\n    PS1='\\u@\\h:\\w\\$ '\nfi\n\n# Enable ls and grep color support + load dircolors\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors \u0026\u0026 eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    alias grep='grep --color=auto'\n    alias fgrep='fgrep --color=auto'\n    alias egrep='egrep --color=auto'\nfi\n\n# Load custom aliases if present\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n\n# Bash completion (if installed)\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\n\n# Starship prompt\nexport STARSHIP_CONFIG=~/.config/starship.toml\neval \"$(starship init bash)\"\n","recorded":"2025-05-18 17:39:24.962581009","filePath":"null","pinned":false},{"value":"# ~/.bashrc: executed by bash(1) for non-login shells.\n# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\n# for examples\n\n# If not running interactively, don't do anything\ncase $- in\n    *i*) ;;\n      *) return;;\nesac\n\n# don't put duplicate lines or lines starting with space in the history.\n# See bash(1) for more options\nHISTCONTROL=ignoreboth\n\n# append to the history file, don't overwrite it\nshopt -s histappend\n\n# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\n\n# check the window size after each command and, if necessary,\n# update the values of LINES and COLUMNS.\nshopt -s checkwinsize\n\n# If set, the pattern \"**\" used in a pathname expansion context will\n# match all files and zero or more directories and subdirectories.\n#shopt -s globstar\n\n# make less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] \u0026\u0026 eval \"$(SHELL=/bin/sh lesspipe)\"\n\n# set variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] \u0026\u0026 [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\n\n# set a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color|*-256color) color_prompt=yes;;\nesac\n\n# uncomment for a colored prompt, if the terminal has the capability; turned\n# off by default to not distract the user: the focus in a terminal window\n# should be on the output of commands, not on the prompt\nforce_color_prompt=yes\n\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] \u0026\u0026 tput setaf 1 \u003e\u0026/dev/null; then\n\t# We have color support; assume it's compliant with Ecma-48\n\t# (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n\t# a case would tend to support setf rather than setaf.)\n\tcolor_prompt=yes\n    else\n\tcolor_prompt=\n    fi\nfi\n\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;34m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;35m\\]\\w\\[\\033[00m\\]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\n\n# If this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\nxterm*|rxvt*)\n    PS1=\"\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\"\n    ;;\n*)\n    ;;\nesac\n\n# enable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors \u0026\u0026 eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\n\n    alias grep='grep --color=auto'\n    alias fgrep='fgrep --color=auto'\n    alias egrep='egrep --color=auto'\nfi\n\n# colored GCC warnings and errors\n#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'\n\n# some more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\n\n# Add an \"alert\" alias for long running commands.  Use like so:\n#   sleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] \u0026\u0026 echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;\u0026|]\\s*alert$//'\\'')\"'\n\n# Alias definitions.\n# You may want to put all your additions into a separate file like\n# ~/.bash_aliases, instead of adding them here directly.\n# See /usr/share/doc/bash-doc/examples in the bash-doc package.\n\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n\n# enable programmable completion features (you don't need to enable\n# this, if it's already enabled in /etc/bash.bashrc and /etc/profile\n# sources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\n\n# custom aliases\nalias py='python3'\nalias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'\nalias drma='docker rm -fv $(docker ps -qa)'\nalias customscreenkey=\"screenkey -s large --scr 2 -p bottom --geometry 1210x300+712+810\";\nalias notes=\"cd ~/obsidian-notes/ \u0026\u0026 nvim\"\nalias encode=\". /home/oscar/.config/scripts/encode.sh\"\nalias settablet=\"xsetwacom --set \\\"15\\\" MapToOutput HEAD-1\"\n\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] \u0026\u0026 \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n\n# for random background on xfce terminal\n# CONFIG_FILE=\"/home/oscar/.config/xfce4/terminal/terminalrc\"\n# TARGET_KEY=\"BackgroundImageFile\"\n# WALLPAPER_PATH=\"/home/oscar/wallpapers/\"\n# UNESCAPED=\"${WALLPAPER_PATH}$(ls ~/wallpapers | sort -R | tail -$N | shuf -n 1)\"\n# REPLACEMENT_VALUE=$(echo $UNESCAPED | sed 's;/;\\\\/;g')\n# sed -i \"s/\\($TARGET_KEY *= *\\).*/\\1$REPLACEMENT_VALUE/\" $CONFIG_FILE\nexport PATH=$PATH:/home/oscar/.spicetify\nexport PATH=$PATH:/home/oscar/.local/bin/\nalias config='/usr/bin/git --git-dir=/home/oscar/.cfg/ --work-tree=/home/oscar'\n\nexport STARSHIP_CONFIG=~/.config/starship.toml\neval \"$(starship init bash)\"","recorded":"2025-05-18 17:24:46.960929457","filePath":"null","pinned":false},{"value":"export STARSHIP_CONFIG=~/.config/starship.toml\neval \"$(starship init bash)\"\n","recorded":"2025-05-18 17:15:56.428090433","filePath":"null","pinned":false},{"value":"eval \"$(dircolors -b ~/.dircolors)\"\n","recorded":"2025-05-18 15:08:41.332662368","filePath":"null","pinned":false},{"value":"source ~/.bashrc   # or ~/.zshrc\n","recorded":"2025-05-18 15:07:28.951525826","filePath":"null","pinned":false},{"value":"echo 'eval \"$(dircolors -b ~/.dircolors)\"' \u003e\u003e ~/.bashrc\n","recorded":"2025-05-18 15:07:17.925638035","filePath":"null","pinned":false}]}